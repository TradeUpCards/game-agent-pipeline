[
  {
    "heading": "Rogue Compendium",
    "content": "ARPG titles like Diablo 4 are notorious for their specific niche interactions that make or break builds. This Rogue Compendium aims to catalog all the known and discovered interactions, allowing you to make more educated decisions when building your character. Due to this being an ever-living document, it is updated as soon as possible to reflect the most up-to-date information available in the community. This section contains our Rogue findings from the latest PTR cycle. Stay tuned for findings when Season 8 PTR begins. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our APS = Attacks per Second, AS % = Attack Speed % The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our Using the tempering manual to cast generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Table of Contents",
    "content": "This section contains our Rogue findings from the latest PTR cycle. Stay tuned for findings when Season 8 PTR begins. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our APS = Attacks per Second, AS % = Attack Speed % The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our Using the tempering manual to cast generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Newest Findings",
    "content": "The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our APS = Attacks per Second, AS % = Attack Speed % The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our Using the tempering manual to cast generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Basic Skills",
    "content": ". For a more in-depth explanation of how attack speed works, please read our APS = Attacks per Second, AS % = Attack Speed % The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our Using the tempering manual to cast generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Core Skills",
    "content": "APS = Attacks per Second, AS % = Attack Speed % The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our Using the tempering manual to cast generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Imbuement Skills",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our Using the tempering manual to cast generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Agility Skills",
    "content": "The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our Using the tempering manual to cast generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Subterfurge Skills",
    "content": ". For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our Using the tempering manual to cast generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Ultimate Skills",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our Using the tempering manual to cast generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Key Passives",
    "content": "The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our Using the tempering manual to cast generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Passives",
    "content": ". For a more in-depth explanation of how attack speed works, please read our Using the tempering manual to cast generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as"
  },
  {
    "heading": "Glyphs",
    "content": "Using the tempering manual to cast generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Legendary Paragon Nodes",
    "content": "generates guaranteed two instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Class Specialization",
    "content": "instead of one. This interaction is independent of other pieces of gear, and solely something that occurs when you have Chance for Heartseeker Projectiles to Cast Twice on your gear. This is unique to and does not happen for other basic attacks. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Attack Speed",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 1",
    "content": "The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 2",
    "content": ". For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Interactions that",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast"
  },
  {
    "heading": "with",
    "content": "The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Interactions that",
    "content": ". For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast"
  },
  {
    "heading": "with",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Interactions that do",
    "content": "The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast"
  },
  {
    "heading": "Attack Speed",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 1",
    "content": "The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 2",
    "content": ". For a more in-depth explanation of how attack speed works, please read our When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our"
  },
  {
    "heading": "Lucky Hit Chance",
    "content": "When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Interactions that",
    "content": ", the amount of you spend snapshots for as long as you cast"
  },
  {
    "heading": "with",
    "content": "you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": ", you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Attack Speed",
    "content": ". For a more in-depth explanation of how attack speed works, please read our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 1",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 2",
    "content": "The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our"
  },
  {
    "heading": "Lucky Hit Chance",
    "content": ". For a more in-depth explanation of how attack speed works, please read our When you use , the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way:"
  },
  {
    "heading": "with",
    "content": ", the Jah rune that turns your evade into the sorcerer skill cannot trigger . Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": ". Any normal evade cast still triggers it though. When you play with , you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": ", you are incentivized to evade once the animation of your begins to able to cast the next one significantly faster. This is a concept known as animation canceling. The more you practice this concept, the more you gain from it. To do this consistently, you need the implicit stat \"Attacks Reduce Evade's Cooldown by 1.5 seconds\" on your boots. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Attack Speed",
    "content": "The following Attack Speed % sources function for . For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 1",
    "content": ". For a more in-depth explanation of how attack speed works, please read our The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 2",
    "content": "The Lucky Hit Chance of continues to differ from expectations. In a brief interaction test of 300 points of data for the base version of and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "and 500 points of data for , overall Lucky Hit Chance was significantly lower than expected. Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "Each hit of was expected to have the Tooltip Lucky Hit Chance% (in this case, 114%). The test was set up in a way where we tracked triggers per hit and tracked all damage instances individually using recorded footage. Based on other spell functions, was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Attack Speed",
    "content": "was expected to have either a 114% Chance to Lucky Hit per hit, or 1-(1-1.14)^(1/2) = 100% chance to Lucky Hit due to the limitations of the formula when a skill has two damage instances on it. However, it turns out that the data was distributed in the following way: As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 1",
    "content": "As we can see, the Doombringer Triggers to Total Hits ratio is off by a significant margin compared to the expected ratio. We are getting roughly half the expected triggers, which makes very poor in Lucky Hit Chance contexts. More on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Lucky Hit Chance",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": ", and converts it to the cold element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance at the cost of only 1 charge. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Attack Speed",
    "content": ". This has been verified not to be the case, it only increases the functionality of the base skill. The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 1",
    "content": "The chill Crowd Control is a bit unique when it comes to staggering bosses. Increasing the Chill % does not increase the amount of stagger Chill generates as the stagger amount is only tied to the duration of the Crowd Control. However, if you reach 100% Chill per attack, each attack Freezes the enemy instead, which does increase the stagger you generate. Sadly, this only occurs if you have 100% Chill per attack, as attacking twice with 50% Chill does not generate the Freeze stagger. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Lucky Hit Chance",
    "content": "is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the poison element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "to the target. To understand how its damage is calculated and how DoT duration influences the damage dealt, refer to the Damage Calculations accordion below. uses the base damage of the ability it imbues in its damage calculation, meaning the skill % (including multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "multiplier) and weapon damage from the imbued skill. This could be summarized as: Essentially, it is the standard damage calculation (which can be found in our ) with the addition of one more skill % and multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Attack Speed",
    "content": "multiplier if you play with . This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 1",
    "content": ". This implies that anything multiplying your core damage, such as does not work for Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "and",
    "content": "is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "to the example above would result in a 41% damage increase once the damage starts declining (as shown below). The Lucky Hit Chance per damage instance for is calculated according to the following formula: Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Attack Speed",
    "content": "Because this formula has (100% - Tooltip LHC%) as a part of its calculation, it was theorized that you gain no more benefit from Lucky Hit once you reach 100% Tooltip Lucky Hit. If the theory was correct, as (100% - Tooltip LHC%) approaches 0, the chance to trigger Lucky Hit effects skyrockets until finally getting to 100% Lucky Hit per tick. At 203.03% Lucky Hit, we would have had 99.99% Tooltip Lucky Hit and an expected proc total of X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 1",
    "content": "X'fals triggers. This was not nearly the case, and similar tests were conducted at other Lucky Hit values to verify this functionality. Further testing has to be conducted, but based on this test, the following was true for More on Lucky Hit functionality in our The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Lucky Hit Chance",
    "content": "The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. is an imbuement that empowers abilities that can be imbued, such as core skills like , and converts it to the shadow element damage type. Although the imbuement has charges, if your imbued ability hits multiple times per cast, the skill applies the imbuement with every damage instance. This implies that tempering that allows your skills to hit multiple times is excellent for frequently applying to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Attack Speed",
    "content": "to the target. However, unlike the other two imbuements, this does not increase the damage of the imbuement, making overlapping applications useless for The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 1",
    "content": "The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Lucky Hit Chance",
    "content": "A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Jah Rune Interaction",
    "content": ". This has been verified not to be the case, it only increases the functionality of the base skill. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Animation Cancelling",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "should follow the usual damage over time formula which you can see below: However, based on testing data, the calculation appears to be using 13 as the total ticks and not Duration x 2. You can find more information on Lucky Hit functionality in our The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Attack Speed",
    "content": "The following interactions are unintuitive as seen through findings from damage recording or footage. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Cap 1",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Admixture Multiplier: ((Shadow DMG% x ]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Lucky Hit Chance",
    "content": "]) + (Poison DMG% x ]) + (Cold DMG% x x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "x 0.2 + 0.4 If you have the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "the formula would be: We have certain multipliers double-dipping the final damage and Alchemical Admixture. Effects such as , the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": ", the new Legendary Glyphs, all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Imbuement Potency",
    "content": "all multiply the Additive Shadow, Poison, and Cold damage you have and also affect the damage you deal with the imbuements themselves. As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Stagger and Chill Effect",
    "content": "As of Season 7, Close Quarters Combat now scales properly with the Legendary Glyph effects continues its old double-dipping issues with the new Legendary effect on . These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": ". These affect the multiplier and the final product, making any build multitudes better than it should be. The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Lucky Hit Chance",
    "content": "The game does not know you will cause a Critical Strike in the future. Because of this, if you are at two stacks of , even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Imbuement Potency",
    "content": ", even if you are 100% certain you will cause a Critical Strike, you do not get the fourth stack of until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Imbuement Improvements",
    "content": "until after the hit has connected to the enemy. This can be avoided by doing 3 Basic attacks followed by a Core skill (something known as 3-1) as that makes it very probable that you have all 4 stacks for your (triple dips during stagger), Legendary multipliers of The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "While you move, your passive energy generation is increased by 5% (per rank). If you have 8 passive energy generation per second and 3 ranks of , you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Imbuement Potency",
    "content": ", you gain 8 x 1.15 = 9.2 energy per second. This functions as a global multiplier to all damage dealt. The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "The Resource Generation stat affects the energy generated from . Total Energy Generated = x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "x Product of all Resource Generation sources x Enemies Killed If Exploit is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from Exploit is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "In the case of we would have: 1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "1 / ( ( 0.55 / 1.18 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4435483871 + 0.45 ) = 1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "1 / 0.8935483871 = increased damage This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 24% Exploit active for 55% of the HP, you now kill the target in ~89.35 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.36x multiplier, you would have: 1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "1 / ( ( 0.55 / 1.48 ) + ( 1 - 0.55 ) ) = increased damage Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "Unlike what the name would suggest, does not affect imbuements itself but only the imbued skill. Each Shadow Damage instance you do has a chance to trigger this effect. You can find more information about Lucky Hit in our can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "",
    "content": "can trigger multiple times per spell if it has several damage instances per action. For instance, can trigger with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "with each damage instance. You can find more information about Lucky Hit in our This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have 3 ranks of , you instead take: 100 x (100% - 18%) = 82 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 18%) = 73.8 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "Conditional Damage Reduction like does not work against ground effects once the enemy dies. can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "can be triggered by any damage instance that causes a critical strike, including items such as gives additive Critical Strike Chance for any ability tagged either Marksman or Cutthroat. is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "In the case of we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Tyrael's Might Scaling",
    "content": "we would have: 1 / ( ( 0.55 / 1.21 ) + ( 1 - 0.55 ) ) = 1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "1 / ( 0.454545 + 0.45 ) = 1 / 0.904545 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "with",
    "content": "This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 21% active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Credits",
    "content": "active for 55% of the HP, you now kill the target in ~90.45 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Barbarian Compendium",
    "content": "ranks from gear for a total 1.42x multiplier, you would have: 1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Rogue Specialization",
    "content": "1 / ( ( 0.55 / 1.42 ) + ( 1 - 0.55 ) ) = Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "Rogue Class Overview",
    "content": "Using this formula, it is quite complicated to optimize for what weapon type to use. Using 10 ranks of as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by"
  },
  {
    "heading": "as of Season 6",
    "content": "as an example, we could calculate the damage gain of using different weapon combinations the following way: In this scenario, using Double Sword assuming you do not \"burst\" away the non-injured and healthy parts of the fight means Double Sword actually gives you the most damage at rank 10 . However, if we burst a bit of the HP away so that is active for 70% of the fight instead of 55% of the fight, we get the following damage gain: In this context, Double Dagger becomes the best choice. It is important to know that this passive entirely depends on what content you play, but you can play it safe and use daggers in all content except for the highest levels of the pit. The game has a stat called imbuement potency, which can be found on things such as . Potency increases the effectiveness of the imbuement you use. A misconception within the community was that imbuement potency increased the passive benefits from the enhancement nodes such as . This has been verified not to be the case, it only increases the functionality of the base skill. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 15%) = 85 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 15%) = 76.5 damage. This damage reduction works with any Stun Grenade source in the game, such as The damage gained from the additive stat from does not function as a separate multiplier. However, the new legendary effect does work as a multiplier to your Stun Grenade damage. You can find more information about multipliers in our 's legendary effect multiplies the Character Stat Sheet, making it affect multipliers such as is active for 55% of the target's HP (first 20% and last 35%), that is not the same as being active for 55% of your attacks, which is what a weighted stat approach is doing. The 55% of HP benefiting from is depleted faster than the other 45%, so you want a formula that factors the multiplier in terms of fight duration: In the case of we would have: 1 / ( ( 0.55 / 1.13 ) + ( 1 - 0.55 ) ) = 1 / ( 0.4867256637 + 0.45 ) = 1 / 0.9367256637 = This is essentially a \"time-to-kill\" (TTK) formula instead of a weighted average. If you imagine 100 attacks of equal value, the second to last row above implies that with 13% damage from active for 55% of the HP, you now kill the target in ~93.67 attacks, so the reciprocal of (new TTK / old TTK) becomes the damage gain. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage instead. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like is unique as it is active as long as you hold your ranged weapon. If you use a build cycling between weapons, beware that you have a lower uptime on the Damage Reduction. appears to be functioning as it should, including for Grenades with There is a small bug with , where if you apply the same Damage over Time effect to the target then the additive part of does not work. To understand how 's passive effect functions, we establish how Rogue Damage over Time effects functions. Importantly, the damage from is calculated as a summation of poisoning damage. This means each time you attack with , you add poisoning damage onto the target. This is then distributed over its full duration across each damage instance. To illustrate this quickly, we can use a quick math example: The consequence of the damage being calculated this way is that adding duration to increases the top-end proportionally to the increased duration. For example, adding to the example above would result in a 41% damage increase once the damage starts declining (as shown below). TLDR; if you apply a lot of Damage over Time effects on the same target, essentially becomes a 40% damage multiplier. This is a separate Damage Reduction source, which means it is inverse multiplicative to your total damage taken. For example, if you take 100 damage before reduction, and you have , you instead take 100 x (100% - 10%) = 90 damage. If you already had 10% Damage Reduction, we would take 100 x (100% - 10%) x (100% - 10%) = 81 damage. Conditional Damage Reduction like does not work against ground effects once the enemy dies. is specifically unspecific, making its true functionality quite unpredictable. The list below is a short list of interactions where it does not impact the damage dealt by a damage instance: It appears that interactions that do not have explicit skill tags and are explicitly skills do not get a damage gain from All changes done with the use of is highlighted in As we can see, both are bugged with , getting a 33% increase over normal functionality with double dips on the Increases the Critical Strike damage dealt to the target by 23% assuming that the target is affected by a trap. Trap sources that are confirmed to work: When you use , the amount of you spend snapshots for as long as you cast without the Attack Speed buff falling off. In practical terms, if you cast , you only have 15% Attack speed until the buff runs out even if you refresh it with 3 The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. typically works on Core skills, however when a skill can have overlapping animations, only the last cast will have the guaranteed . All other active casts will have this effect cancelled. This applies to the following skills: The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. appears to drop between 16 and 20 grenades instead of the expected amount. It also seems to be dealing similar damage to and deals much less damage than expected. An important thing to note is that the tooltip damage is the AoE bolt damage. Tyrael's triggered by Basic Attacks are halved, core skills and AoE has full damage. It is uncertain if this means certain other tags are affected as well. Channeled skills snapshots the \"health\" status, causing it to trigger as long as you start the channel at max HP. The following interactions have been verified through damage recording or footage to ensure they are functional. Anything not listed here has not explicitly been verified during the creation of this list. The following interactions have been verified through damage recording or footage to ensure they are not functional. Anything not listed here has not explicitly been verified during the creation of this list. Maintained by Maxroll Media Group, All Rights Reserved"
  }
]