// Demo of the new hierarchical parser structure
console.log('üèóÔ∏è  Hierarchical Parser Structure Demo\n');

console.log('üìã Current Problem:');
console.log('‚ùå Parser loses boss version context');
console.log('‚ùå All abilities mixed together under "Attacks and Abilities"');
console.log('‚ùå Can\'t tell which phase an attack belongs to\n');

console.log('‚úÖ New Solution:');
console.log('üéØ Preserves boss version hierarchy');
console.log('‚öîÔ∏è  Groups abilities by boss version');
console.log('üìã Links strategies to specific boss versions');
console.log('üìä Extracts boss stats as structured data\n');

console.log('üìà Example Output Structure:');
console.log('```json');
console.log('{');
console.log('  "title": "Echo of Lilith",');
console.log('  "url": "https://maxroll.gg/d4/bosses/echo-of-lilith",');
console.log('  "bossStats": {');
console.log('    "level": 100,');
console.log('    "hp": "~24,000,000",');
console.log('    "staggerHp": 500');
console.log('  },');
console.log('  "bossVersions": [');
console.log('    {');
console.log('      "name": "Echo of Lilith, Hatred Incarnate",');
console.log('      "abilities": [');
console.log('        {');
console.log('          "name": "Blood Orb Creation",');
console.log('          "description": "Lilith siphons the blood out of the player..."');
console.log('        },');
console.log('        {');
console.log('          "name": "Melee Combo",');
console.log('          "description": "A series of melee attacks..."');
console.log('        },');
console.log('        {');
console.log('          "name": "Fissure",');
console.log('          "description": "Creates a fissure in the ground..."');
console.log('        }');
console.log('      ],');
console.log('      "strategies": [');
console.log('        {');
console.log('          "name": "Strategy",');
console.log('          "description": "Dodge the blood orbs and avoid the fissures..."');
console.log('        }');
console.log('      ]');
console.log('    },');
console.log('    {');
console.log('      "name": "Echo of Lilith, Mother of Mankind",');
console.log('      "abilities": [');
console.log('        {');
console.log('          "name": "Blood Orb Creation (single)",');
console.log('          "description": "Creates a single blood orb..."');
console.log('        },');
console.log('        {');
console.log('          "name": "Ground Slam",');
console.log('          "description": "A powerful ground slam attack..."');
console.log('        }');
console.log('      ],');
console.log('      "strategies": [');
console.log('        {');
console.log('          "name": "Strategy",');
console.log('          "description": "Focus on dodging the ground slam..."');
console.log('        }');
console.log('      ]');
console.log('    }');
console.log('  ],');
console.log('  "generalContent": [');
console.log('    {');
console.log('      "heading": "Tormented Debuff",');
console.log('      "content": "Lilith applies a stacking damage-taken debuff..."');
console.log('    },');
console.log('    {');
console.log('      "heading": "Fight Progression and General Strategy",');
console.log('      "content": "The fight progresses through multiple phases..."');
console.log('    }');
console.log('  ]');
console.log('}');
console.log('```\n');

console.log('üéØ Key Benefits:');
console.log('‚úÖ **Boss Version Context**: Each ability is clearly linked to its boss version');
console.log('‚úÖ **Phase-Specific Mechanics**: AI can understand which phase each attack belongs to');
console.log('‚úÖ **Structured Data**: Boss stats are parsed as numbers, not plain text');
console.log('‚úÖ **Strategy Organization**: Strategies are grouped with their relevant boss versions');
console.log('‚úÖ **Training Quality**: Much better data for AI training\n');

console.log('üöÄ Usage:');
console.log('CLI: pnpm parse:maxroll --preserve-hierarchy input.json');
console.log('GUI: Enable "Preserve Hierarchy" option in the parser interface');
console.log('API: Set preserveHierarchy: true in the parse request\n');

console.log('üîß Implementation:');
console.log('- New TypeScript interfaces for hierarchical structure');
console.log('- Smart detection of boss pages vs regular content');
console.log('- Pattern matching for boss versions and abilities');
console.log('- Backward compatible with existing parser');
console.log('- Optional feature that can be enabled/disabled'); 